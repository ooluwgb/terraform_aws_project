name: tf-pr-guards
on:
  pull_request:
    branches: ["main"]

permissions:
  id-token: write     # ðŸ‘ˆ REQUIRED for OIDC
  contents: read

jobs:
  pr-checks:
    runs-on: ubuntu-latest
    steps:
      # --- 0) Checkout code ---
      - uses: actions/checkout@v4

      # --- 1) Secret scan (Gitleaks) ---
      - name: Install gitleaks
        run: |
          GL_VERSION=8.18.4
          curl -sSL "https://github.com/gitleaks/gitleaks/releases/download/v${GL_VERSION}/gitleaks_${GL_VERSION}_linux_x64.tar.gz" \
          | tar -xz
      - name: Run gitleaks (fail on findings)
        run: ./gitleaks detect --source . --no-banner --redact --exit-code 1

      # --- 2) Terraform fmt check ---
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.9.5
      - name: Check Terraform formatting
        run: terraform fmt -check -recursive

      # --- 3) Configure AWS creds via OIDC ---
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: arn:aws:iam::940659974358:role/GitHubActionsrole
          aws-region: us-east-1

      # Debug step (optional)
      - name: Who am I?
        run: aws sts get-caller-identity

      # --- 4) Terraform plan ---
      # Initialize Terraform (backend)
      - name: Terraform Init
        working-directory: infra/live/dev   # ðŸ‘ˆ change this per env (dev â†’ prod)
        run: terraform init -input=false

      - name: Terraform Plan
        working-directory: infra/live/dev   # ðŸ‘ˆ change this per env (dev â†’ prod)
        run: terraform plan -input=false -var-file=dev.tfvars   # ðŸ‘ˆ change tfvars per env
